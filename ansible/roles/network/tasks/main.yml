---

- name: Run Bootstrap Net CloudFormation Stack
  cloudformation:
    stack_name: "{{ stacks.network }}"
    region: "{{ lookup('env', 'AWS_REGION') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    state: present
    template: "../cfn/bootstrap-network.json"
    template_parameters:
      StackName : "{{ bootstrap.StackName }}"
      WebSubnetCIDR : "{{ bootstrap.WebSubnetCIDR }}"
      AppSubnetCIDR : "{{ bootstrap.AppSubnetCIDR }}"
      DataSubnetCIDR : "{{ bootstrap.DataSubnetCIDR }}"
      VPCCIDR : "{{ bootstrap.VpcCidrBlock }}"
      StackAvailabilityZone : "{{ bootstrap.StackAvailabilityZone }}"
  register: BootstrapNetStack
  when: stack_action == "create" or stack_action == "create-web"or stack_action == "create-app" or stack_action == "create-db" or stack_action == "create-eip" or stack_action == "create-network"

- name: Run DB Instance Creation CloudFormation Stack
  cloudformation:
    stack_name: "{{ stacks.db }}"
    region: "{{ lookup('env', 'AWS_REGION') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    state: present
    template: "../cfn/bootstrap-instance.json"
    template_parameters:
      StackName : "{{ bootstrap.StackName }}"
      AppName : "db"
      SecurityGroup : "{{ BootstrapNetStack.stack_outputs.DataNetSecurityGroup }}"
      Subnet : "{{ BootstrapNetStack.stack_outputs.DataSubnet }}"
      InstanceType : "{{ bootstrap.InstanceType }}"
      AMI : "{{ bootstrap.AMI }}"
      KeyPairName : "{{ bootstrap.KeyPairName }}"
  register: DbInstanceStack
  when: stack_action == "create" or stack_action == "create-db"

- name: Run App Instance Creation CloudFormation Stack
  cloudformation:
    stack_name: "{{ stacks.app }}"
    region: "{{ lookup('env', 'AWS_REGION') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    state: present
    template: "../cfn/bootstrap-instance.json"
    template_parameters:
      StackName : "{{ bootstrap.StackName }}"
      AppName : "app"
      SecurityGroup : "{{ BootstrapNetStack.stack_outputs.AppNetSecurityGroup }}"
      Subnet : "{{ BootstrapNetStack.stack_outputs.AppSubnet }}"
      InstanceType : "{{ bootstrap.InstanceType }}"
      AMI : "{{ bootstrap.AMI }}"
      KeyPairName : "{{ bootstrap.KeyPairName }}"
  register: AppInstanceStack
  when: stack_action == "create" or stack_action == "create-app"

- name: Run Web Instance Creation CloudFormation Stack
  cloudformation:
    stack_name: "{{ stacks.web }}"
    region: "{{ lookup('env', 'AWS_REGION') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    state: present
    template: "../cfn/bootstrap-instance.json"
    template_parameters:
      StackName : "{{ bootstrap.StackName }}"
      AppName : "web"
      SecurityGroup : "{{ BootstrapNetStack.stack_outputs.WebNetSecurityGroup }}"
      Subnet : "{{ BootstrapNetStack.stack_outputs.WebSubnet }}"
      InstanceType : "{{ bootstrap.InstanceType }}"
      AMI : "{{ bootstrap.AMI }}"
      KeyPairName : "{{ bootstrap.KeyPairName }}"
  register: WebInstanceStack
  when: stack_action == "create" or stack_action == "create-web"

- name: Run EIP Creation CloudFormation Stack
  cloudformation:
    stack_name: "WebInstanceEIPStack"
    region: "{{ lookup('env', 'AWS_REGION') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    state: present
    template: "../cfn/bootstrap-eip.json"
    template_parameters:
      StackName : "{{ bootstrap.StackName }}"
      WebInstance : "{{ WebInstanceStack.stack_outputs.InstanceId }}"
  register: WebInstanceEIPStack
  when: stack_action == "create" or stack_action == "create-eip"

- name: Remove EIP Stack
  cloudformation:
    stack_name: "WebInstanceEIPStack"
    region: "{{ lookup('env', 'AWS_REGION') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    state: absent
    template: "../cfn/bootstrap-eip.json"
  when: stack_action == "delete" or stack_action == "delete-eip"

- name: Remove Web Instance Stack
  cloudformation:
    stack_name: "{{ stacks.web }}"
    region: "{{ lookup('env', 'AWS_REGION') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    state: absent
    template: "../cfn/bootstrap-instance.json"
  when: stack_action == "delete" or stack_action == "delete-web"
 
- name: Remove App Instance Stack
  cloudformation:
    stack_name: "{{ stacks.app }}"
    region: "{{ lookup('env', 'AWS_REGION') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    state: absent
    template: "../cfn/bootstrap-instance.json"
  when: stack_action == "delete" or stack_action == "delete-app"

- name: Remove Data Instance Stack
  cloudformation:
    stack_name: "{{ stacks.db }}"
    region: "{{ lookup('env', 'AWS_REGION') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    state: absent
    template: "../cfn/bootstrap-instance.json"
  when: stack_action == "delete" or stack_action == "delete-db"

- name: Remove Bootstrap Net CloudFormation Stack
  cloudformation:
    stack_name: "{{ stacks.network }}"
    region: "{{ lookup('env', 'AWS_REGION') }}"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    state: absent
    template: "../cfn/bootstrap-network.json"
  when: stack_action == "delete"